#!/bin/bash

# Quote and Eventlog validating Attestation Server.
#
# This server accepts incoming HTTP POST requests from an attesting machine
# that contain a tar file of a TPM Endorsement Key, Attestation Key, Quote,
# PCR list, Eventlog and other details. It performs three actions:
#
# * Validates that the Quote is signed by the AK
# * Validates that the EK certificate has a good trust chain
# * Validates that the PCR extensions in the Eventlog produce the PCRs in the quote
#
# It then invokes an external handler to verify that the eventlog
# meets the policy requirements, and will return any output from this
# handler to the attesting machine.

# This server assumes the attestation routine is implemented in python3, and we
# run it using uwsgi. The attestation routine is in sbin/attest-server-sub.py, and
# implemented using Flask (for the web-framework details) and subprocess calls to
# tpm2-tools executables (which do the 99.99% of the work).
#
# Environment variable controls;
# SAFEBOOT_UWSGI
#    Specifies the UWSGI executable. If not set, the default is;
#            uwsgi_python3
# SAFEBOOT_UWSGI_FLAGS
#    Specifies the listening/interface behavior. If not set, the default is;
#            --http :$SAFEBOOT_UWSGI_PORT --stats :$((SAFEBOOT_UWSGI_PORT+1))
# SAFEBOOT_UWSGI_PORT
#    Port for UWSGI to listen on.
#    - If a port number is provided on the command-line, it takes precedence.
#    - Defaults to "8080"
#    - If SAFEBOOT_UWSGI_FLAGS is set, this variable and any port number
#      specified on the command-line are both ignored.
# SAFEBOOT_UWSGI_OPTIONS:
#    If not set, default options will be used instead;
#            --processes 2 --threads 2
#    Set to "none" if you want the cmd to use no options at all.

UWSGI=${SAFEBOOT_UWSGI:=uwsgi_python3}
if [[ $# -gt 1 ]]; then
	echo "Usage: attest-server [port]" >&2
	exit 1
elif [[ $# -eq 1 ]]; then
	SAFEBOOT_UWSGI_PORT=$1
fi
PORT=${SAFEBOOT_UWSGI_PORT:=8080}
STATS=$((SAFEBOOT_UWSGI_PORT+1))
UWSGI_FLAGS=${SAFEBOOT_UWSGI_FLAGS:=--http :$SAFEBOOT_UWSGI_PORT --stats :$STATS}
UWSGI_OPTS=${SAFEBOOT_UWSGI_OPTIONS:=--processes 2 --threads 2}
[[ "$UWSGI_OPTS" == "none" ]] && UWSGI_OPTS=

TO_RUN="$UWSGI \
	--plugin http \
	--wsgi-file sbin/attest-server-sub.py \
	--callable app \
	$UWSGI_FLAGS \
	$UWSGI_OPTS"

echo "Running: $TO_RUN"
$TO_RUN
